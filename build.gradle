plugins {
    id 'java'
    id 'jacoco'
    id 'checkstyle'
    id 'pmd'
}

group 'no.unit.nva'
version '1.0-SNAPSHOT'



allprojects {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'checkstyle'
    apply plugin: 'pmd'

    sourceCompatibility = JavaVersion.VERSION_11  // source-code version and must be <= targetCompatibility
    targetCompatibility = JavaVersion.VERSION_11 // bytecode target version

    def junit5Version = '5.6.0'

    dependencies {
        testImplementation group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.19.0'
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junit5Version
        testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.2.4'
        testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junit5Version
        testCompileOnly 'junit:junit:4.12'
        testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.1.0'
    }

    test {
        useJUnitPlatform()
        failFast = true
        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }

    pmd {
        ruleSetConfig = rootProject.resources.text.fromFile('config/pmd/ruleset.xml')
        ruleSets = []
        ignoreFailures = false
    }

    checkstyle {
        configFile = rootProject.resources.text.fromFile('config/checkstyle/checkstyle.xml').asFile()
        showViolations = true
    }

    tasks.withType(Checkstyle) {
        reports {
            xml.enabled false
            html.enabled true
            html.stylesheet rootProject.resources.text.fromFile('config/checkstyle/checkstyle-simple.xsl')
        }
    }
}

