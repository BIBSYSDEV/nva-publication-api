name: Trigger DynamicPipelineMakerLambda

'''
{
    "Records": [
        {
            "awsRegion": "eu-west-1",
            "codecommit": {
                "references": [
                    {
                        "commit": "050d9a5cb929bdd2c0a4d62755c320680e99a11e",
                        "created": true,
                        "ref": "refs/heads/master"
                    }
                ]
            },
            "customData": "{}",
            ...
        }
    ]
}
'''

on:
  pull_request:
    types: [opened, closed]

jobs:
  dynamic-pipeline-maker-lambda:
    runs-on: ubuntu-latest
    steps:
      - name: aws-ssm-to-env
        uses: bomb-on/aws-ssm-to-env@master
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          ssm_parameter_list: ${{ format('{0}CustomData', github.event.repository.name) }}
    - name: Create pipeline
      if: ${{ github.event_name = 'pull_request' && github.event.action = 'opened' }}
      uses: gagoar/invoke-aws-lambda@master
      env:
        PAYLOAD_TEMPLATE: '{ "Records": [ { "customData": "{2}", "codecommit": { "references": [ { "commit": "{0}", "ref": "{1}", "created": true } ] } } ] }'
        CUSTOM_DATA: ${{ env[format('AWS_SSM_{0}_CUSTOM_DATA', github.event.repository.name)] }}
      with:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        REGION: ${{ secrets.AWS_REGION }}
        FunctionName: ${{ secrets.AWS_CICD_FUNCTION_NAME }}
        Payload: ${{ format(env.PAYLOAD_TEMPLATE, github.sha, github.ref, env.CUSTOM_DATA) }}
    - name: Delete pipeline
      if: ${{ github.event_name = 'pull_request' && github.event.action = 'closed' }
      uses: gagoar/invoke-aws-lambda@master
      env:
        PAYLOAD_TEMPLATE: '{ "Records": [ { "customData": "{2}", codecommit": { "references": [ { "commit": "{0}", "ref": "{1}", "deleted": true } ] } } ] }'
        CUSTOM_DATA: ${{ env[format('AWS_SSM_{0}_CUSTOM_DATA', github.event.repository.name)] }}
      with:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        REGION: ${{ secrets.AWS_REGION }}
        FunctionName: ${{ secrets.AWS_CICD_FUNCTION_NAME }}
        Payload: ${{ format(env.PAYLOAD_TEMPLATE, github.sha, github.ref, env.CUSTOM_DATA) }}

