repositories {
    maven { url "https://s3.eu-central-1.amazonaws.com/dynamodb-local-frankfurt/release" }
}

dependencies {
    api project(":publication-doi-commons")
    api(group: 'com.github.BIBSYSDEV', name: 'nva-datamodel-java', version: project.ext.nvaDatamodelVersion) {
        exclude group: 'com.github.BIBSYSDEV', module: 'nva-commons'
    }

    api group: 'com.github.bibsysdev', name: 'core', version: project.ext.nvaCommonsVersion
    api group: 'com.github.bibsysdev', name: 'apigateway', version: project.ext.nvaCommonsVersion

    api group: 'com.amazonaws', name: 'aws-java-sdk-lambda', version: project.ext.awsSdkVersion
    api(group: 'com.github.javafaker', name: 'javafaker', version: '1.0.2') {
        because('For generating test data in tests. Another alternative is jfairy')
    }

    api group: 'com.amazonaws', name: 'aws-java-sdk-lambda', version: project.ext.awsSdkVersion
    api group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: project.ext.awsSdkVersion
    api group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: project.junit5Version

    api('com.amazonaws:DynamoDBLocal:1.15.0') {
        exclude group: 'com.amazonaws', module: 'aws-java-sdk-dynamodb'
        exclude group: 'com.amazonaws', module: 'aws-java-sdk-core'
    }
    api group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: project.ext.junit5Version
    api group: 'org.junit.jupiter', name: 'junit-jupiter-migrationsupport', version: project.ext.junit5Version

    implementation project (":storage-model")
}

configurations.api.canBeResolved = true

task copyNativeDeps(type: Copy) {
    from(configurations.api) {
        include "*.dylib"
        include "*.so"
        include "*.dll"
    }
    into 'build/dynamodb-local'
}

test.dependsOn copyNativeDeps
test.doFirst {
    systemProperty "java.library.path", 'build/dynamodb-local'
}