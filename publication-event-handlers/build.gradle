dependencies {
    implementation project(":publication-doi-commons")
    implementation project(":expansion")
    implementation project(":publication-commons")
    implementation project(":publication-rest")

    implementation(libs.nva.datamodel.core) {
        exclude group: 'com.github.bibsysdev', module: 'nva-commons'
    }

    implementation libs.nva.eventhandlers
    implementation libs.nva.core
    implementation libs.nva.json
    implementation libs.nva.s3
    implementation libs.nva.secrets
    implementation libs.nva.apigateway
    implementation libs.nva.auth
    implementation libs.nva.testutils // used in CreatePublishedPublicationsHandler

    implementation libs.aws.core
    implementation libs.aws.lambda.java.core
    implementation libs.aws.lambda.events
    implementation libs.aws.java.sdk.core
    implementation libs.guava

    implementation libs.aws.sdk.dynamodb
    implementation libs.aws.sdk2.s3
    implementation libs.aws.sdk2.urlconnectionclient
    implementation libs.aws.sdk2.eventbridge
    implementation libs.aws.sdk2.sqs
    implementation libs.aws.sdk2.httpClientApi
    implementation libs.aws.sdk2.auth
    implementation libs.aws.sdk2.regions
    implementation libs.aws.sdk2.core
    implementation libs.aws.sdk2.secrets
    implementation libs.aws.apache.client

    implementation libs.jackson.annotations
    implementation libs.jackson.databind
    implementation libs.jackson.core

    implementation libs.bundles.logging

    testImplementation libs.bundles.testing
    testImplementation libs.nva.identifiers
    testImplementation libs.nva.datamodel.testutils
    testImplementation libs.nva.datamodel.core
    testImplementation project(":publication-testing")

    compileOnly(libs.nva.identifiers) {
        because "PMD complains about no/unit/nva/identifiers/SortableIdentifier"
    }
}

test {
    environment "EVENTS_BUCKET", "theEventsBucket"
    environment "EVENT_BUS_NAME", "eventBus"
    environment "HANDLER_EVENTS_FOLDER", "reource-updates-events"
    environment "IDENTITY_SERVICE_SECRET_NAME", "someSecretName"
    environment "IDENTITY_SERVICE_SECRET_KEY", "someSecretKey"
    environment "PERSISTED_ENTRIES_BUCKET", "persistedEntries"
    environment "AWS_REGION", "AWS_REGION"
    environment "TABLE_NAME", "ResourcesTable"
    environment "AWS_REGION", "eu-west-1"
    environment "ID_NAMESPACE", "https://www.example.org/publication"
    environment "BACKEND_CLIENT_AUTH_URL", "localhost"
    environment "BACKEND_CLIENT_SECRET_NAME", "secret"
}
