dependencies {

    implementation project(":storage-model")
    implementation project(":publication-commons")


    implementation group: 'com.github.bibsysdev', name: 'apigateway', version: project.ext.nvaCommonsVersion
    implementation group: 'com.github.bibsysdev', name: 'identifiers', version: project.ext.nvaCommonsVersion
    implementation group: 'com.github.bibsysdev', name: 'core', version: project.ext.nvaCommonsVersion
    implementation(group: 'com.github.bibsysdev', name: 'nva-datamodel-java', version: project.ext.nvaDatamodelVersion) {
        exclude group: 'com.github.bibsysdev', module: 'nva-commons'
    }
    implementation group:'com.github.bibsysdev.nva-user-access-service', name:'user-access-rights', version:'0.3.0'

    implementation group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: project.ext.awsSdkVersion

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: project.ext.jacksonVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: project.ext.jacksonVersion
    runtimeOnly group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: project.ext.jacksonVersion
    testImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: project.ext.jacksonVersion


    testImplementation project(':publication-testing')
    testImplementation group: 'org.mockito', name: 'mockito-core', version: project.ext.mockitoVersion
    testImplementation group: 'com.github.bibsysdev', name: 'nva-testutils', version: project.ext.nvaTestUtilsVersion
    testImplementation(group: 'com.github.javafaker', name: 'javafaker', version: project.ext.javaFakerVersion) {
        because('For generating test data in tests. Another alternative is jfairy')
    }

    compileOnly group: 'org.zalando', name: 'problem', version: project.ext.zalandoProblemVersion
    compileOnly group: 'com.amazonaws', name: 'aws-lambda-java-core', version: project.ext.awsLambdaCore

}

configurations.testImplementation.canBeResolved = true

task copyNativeDeps(type: Copy) {
    from(configurations.testImplementation) {
        include "*.dylib"
        include "*.so"
        include "*.dll"
    }
    into 'build/dynamodb-local'
}

test.dependsOn copyNativeDeps
test.doFirst {
    systemProperty "java.library.path", 'build/dynamodb-local'
}
